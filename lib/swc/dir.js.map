{"version":3,"sources":["../../src/swc/dir.ts"],"sourcesContent":["import slash from \"slash\";\nimport { existsSync, promises } from \"fs\";\nimport { dirname, relative, join } from \"path\";\nimport { CompileStatus } from \"./constants\";\nimport { CliOptions } from \"./options\";\nimport { compile } from \"./util\";\nimport { outputResult } from \"./compile\";\nimport {\n  globSources,\n  isCompilableExtension,\n  slitCompilableAndCopyable,\n  watchSources,\n} from \"./sources\";\n\nimport type { Options } from \"@swc/core\";\n\ndeclare module \"fs\" {\n  namespace promises {\n    /**\n     * For node > 14 we want to use rm instead of rmdir\n     * We need to augment node v12 types\n     */\n    function rm(dir: string, option: object): void;\n  }\n}\n\nconst { mkdir, rmdir, rm, copyFile, unlink } = promises;\n\nconst cwd = process.cwd();\nconst recursive = { recursive: true };\n\n/**\n * Removes the leading directory, including all parent relative paths\n */\nfunction stripComponents(filename: string) {\n  const components = filename.split(\"/\").slice(1);\n  if (!components.length) {\n    return filename;\n  }\n  while (components[0] === \"..\") {\n    components.shift();\n  }\n  return components.join(\"/\");\n}\n\nfunction getDest(filename: string, outDir: string, ext?: string) {\n  const relativePath = slash(relative(cwd, filename));\n  let base = stripComponents(relativePath);\n  if (ext) {\n    base = base.replace(/\\.\\w*$/, ext);\n  }\n  return join(outDir, base);\n}\n\nasync function handleCompile(\n  filename: string,\n  outDir: string,\n  sync: boolean,\n  swcOptions: Options\n) {\n  const dest = getDest(filename, outDir, \".js\");\n  const sourceFileName = slash(relative(dirname(dest), filename));\n\n  const options = { ...swcOptions, sourceFileName };\n\n  const result = await compile(filename, options, sync, dest);\n\n  if (result) {\n    await outputResult(result, filename, dest, options);\n    return CompileStatus.Compiled;\n  } else {\n    return CompileStatus.Omitted;\n  }\n}\n\nasync function handleCopy(filename: string, outDir: string) {\n  const dest = getDest(filename, outDir);\n  const dir = dirname(dest);\n\n  await mkdir(dir, recursive);\n  await copyFile(filename, dest);\n\n  return CompileStatus.Copied;\n}\n\nasync function beforeStartCompilation(cliOptions: CliOptions) {\n  const { outDir, deleteDirOnStart } = cliOptions;\n\n  if (deleteDirOnStart) {\n    const exists = await existsSync(outDir);\n    if (exists) {\n      rm ? await rm(outDir, recursive) : await rmdir(outDir, recursive);\n    }\n  }\n}\n\nasync function initialCompilation(cliOptions: CliOptions, swcOptions: Options) {\n  const {\n    includeDotfiles,\n    filenames,\n    copyFiles,\n    extensions,\n    outDir,\n    sync,\n    quiet,\n    watch,\n  } = cliOptions;\n\n  const results = new Map<string, CompileStatus>();\n\n  const start = process.hrtime();\n  const sourceFiles = await globSources(filenames, includeDotfiles);\n  const [compilable, copyable] = slitCompilableAndCopyable(\n    sourceFiles,\n    extensions,\n    copyFiles\n  );\n\n  if (sync) {\n    for (const filename of compilable) {\n      try {\n        const result = await handleCompile(filename, outDir, sync, swcOptions);\n        results.set(filename, result);\n      } catch (err) {\n        console.error(err.message);\n        results.set(filename, CompileStatus.Failed);\n      }\n    }\n    for (const filename of copyable) {\n      try {\n        const result = await handleCopy(filename, outDir);\n        results.set(filename, result);\n      } catch (err) {\n        console.error(err.message);\n        results.set(filename, CompileStatus.Failed);\n      }\n    }\n  } else {\n    await Promise.all([\n      Promise.allSettled(\n        compilable.map(file =>\n          handleCompile(file, outDir, sync, swcOptions).catch(err => {\n            console.error(err.message);\n            throw err;\n          })\n        )\n      ),\n      Promise.allSettled(copyable.map(file => handleCopy(file, outDir))),\n    ]).then(([compiled, copied]) => {\n      compiled.forEach((result, index) => {\n        const filename = compilable[index];\n        if (result.status === \"fulfilled\") {\n          results.set(filename, result.value);\n        } else {\n          results.set(filename, CompileStatus.Failed);\n        }\n      });\n\n      copied.forEach((result, index) => {\n        const filename = copyable[index];\n        if (result.status === \"fulfilled\") {\n          results.set(filename, result.value);\n        } else {\n          results.set(filename, CompileStatus.Failed);\n        }\n      });\n    });\n  }\n  const end = process.hrtime(start);\n\n  let failed = 0;\n  let compiled = 0;\n  let copied = 0;\n  for (let [_, status] of results) {\n    switch (status) {\n      case CompileStatus.Compiled:\n        compiled += 1;\n        break;\n      case CompileStatus.Failed:\n        failed += 1;\n        break;\n      case CompileStatus.Copied:\n        copied += 1;\n        break;\n    }\n  }\n\n  if (!quiet && compiled + copied) {\n    let message = \"\";\n    if (compiled) {\n      message += `Successfully compiled: ${compiled} ${\n        compiled > 1 ? \"files\" : \"file\"\n      }`;\n    }\n    if (compiled && copied) {\n      message += \", \";\n    }\n    if (copied) {\n      message += `copied ${copied} ${copied > 1 ? \"files\" : \"file\"}`;\n    }\n    message += ` with swc (%dms)`;\n\n    console.log(message, (end[1] / 1000000).toFixed(2));\n  }\n\n  if (failed) {\n    console.log(\n      `Failed to compile ${failed} ${failed !== 1 ? \"files\" : \"file\"} with swc.`\n    );\n    if (!watch) {\n      throw new Error(\"Failed to compile\");\n    }\n  }\n}\n\nasync function watchCompilation(cliOptions: CliOptions, swcOptions: Options) {\n  const {\n    includeDotfiles,\n    filenames,\n    copyFiles,\n    extensions,\n    outDir,\n    quiet,\n    sync,\n  } = cliOptions;\n\n  const watcher = await watchSources(filenames, includeDotfiles);\n  watcher.on(\"ready\", () => {\n    if (!quiet) {\n      console.info(\"Watching for file changes.\");\n    }\n  });\n  watcher.on(\"unlink\", async filename => {\n    try {\n      if (isCompilableExtension(filename, extensions)) {\n        await unlink(getDest(filename, outDir, \".js\"));\n      } else if (copyFiles) {\n        await unlink(getDest(filename, outDir));\n      }\n    } catch (err) {\n      if (err.code !== \"ENOENT\") {\n        console.error(err.stack);\n      }\n    }\n  });\n  for (const type of [\"add\", \"change\"]) {\n    watcher.on(type, async filename => {\n      if (isCompilableExtension(filename, extensions)) {\n        try {\n          const start = process.hrtime();\n          const result = await handleCompile(\n            filename,\n            outDir,\n            sync,\n            swcOptions\n          );\n          if (!quiet && result === CompileStatus.Compiled) {\n            const end = process.hrtime(start);\n            console.log(\n              `Successfully compiled ${filename} with swc (%dms)`,\n              (end[1] / 1000000).toFixed(2)\n            );\n          }\n        } catch (err) {\n          console.error(err.message);\n        }\n      } else if (copyFiles) {\n        try {\n          const start = process.hrtime();\n          const result = await handleCopy(filename, outDir);\n          if (!quiet && result === CompileStatus.Copied) {\n            const end = process.hrtime(start);\n            console.log(\n              `Successfully copied ${filename} with swc (%dms)`,\n              (end[1] / 1000000).toFixed(2)\n            );\n          }\n        } catch (err) {\n          console.error(`Failed to copy ${filename}`);\n          console.error(err.message);\n        }\n      }\n    });\n  }\n}\n\nexport default async function dir({\n  cliOptions,\n  swcOptions,\n}: {\n  cliOptions: CliOptions;\n  swcOptions: Options;\n}) {\n  const { watch, skipInitialCompilation } = cliOptions;\n\n  await beforeStartCompilation(cliOptions);\n  if (!skipInitialCompilation) {\n    await initialCompilation(cliOptions, swcOptions);\n  }\n\n  if (watch) {\n    await watchCompilation(cliOptions, swcOptions);\n  }\n}\n"],"names":["dir","mkdir","rmdir","rm","copyFile","unlink","cwd","process","recursive","stripComponents","filename","components","split","slice","length","shift","join","getDest","outDir","ext","relativePath","base","replace","handleCompile","sync","swcOptions","dest","sourceFileName","options","result","Compiled","Omitted","handleCopy","Copied","beforeStartCompilation","cliOptions","deleteDirOnStart","exists","initialCompilation","includeDotfiles","filenames","copyFiles","extensions","quiet","watch","results","Map","start","hrtime","sourceFiles","compilable","copyable","set","err","console","error","message","Failed","Promise","all","allSettled","map","file","catch","then","compiled","copied","forEach","index","status","value","end","failed","_","log","toFixed","Error","watchCompilation","watcher","on","info","code","stack","type","skipInitialCompilation"],"mappings":"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"}
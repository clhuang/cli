{"version":3,"sources":["../../../src/swc/__mocks__/fs.ts"],"sourcesContent":["import fs from 'fs';\nimport type { Stats } from \"fs\";\n\n\nexport interface MockHelpers {\n  resetMockStats: () => void;\n  setMockStats: (stats: Record<string, Stats | Error>) => void;\n}\n\nconst fsMock = jest.createMockFromModule<typeof fs & MockHelpers>('fs');\n\nlet mockStats: Record<string, Stats | Error> = {}\n\nfunction setMockStats(stats: Record<string, Stats | Error>) {\n  Object.entries(stats).forEach(([path, stats]) => {\n    mockStats[path] = stats;\n  });\n}\nfunction resetMockStats() {\n  mockStats = {};\n}\n\nexport function stat(path: string, cb: (err?: Error, stats?: Stats) => void) {\n  const result = mockStats[path];\n  if (result instanceof Error) {\n    cb(result, undefined);\n  } else {\n    cb(undefined, result);\n  }\n}\n\nfsMock.setMockStats = setMockStats;\nfsMock.resetMockStats = resetMockStats;\n\nfsMock.stat = stat as typeof fs.stat;\n\nexport default fsMock;"],"names":["stat","fsMock","jest","createMockFromModule","mockStats","setMockStats","stats","Object","entries","forEach","path","resetMockStats","cb","result","Error","undefined"],"mappings":";;;;QAsBgBA,IAAI,GAAJA,IAAI;;AAbpB,KAAK,CAACC,MAAM,GAAGC,IAAI,CAACC,oBAAoB,CAA0B,CAAI;AAEtE,GAAG,CAACC,SAAS,GAAkC,CAAC,CAAC;SAExCC,YAAY,CAACC,MAAoC,EAAE,CAAC;IAC3DC,MAAM,CAACC,OAAO,CAACF,MAAK,EAAEG,OAAO,GAAGC,IAAI,EAAEJ,KAAK,IAAM,CAAC;QAChDF,SAAS,CAACM,IAAI,IAAIJ,KAAK;IACzB,CAAC;AACH,CAAC;SACQK,cAAc,GAAG,CAAC;IACzBP,SAAS,GAAG,CAAC,CAAC;AAChB,CAAC;SAEeJ,IAAI,CAACU,IAAY,EAAEE,EAAwC,EAAE,CAAC;IAC5E,KAAK,CAACC,MAAM,GAAGT,SAAS,CAACM,IAAI;IAC7B,EAAE,EAAEG,MAAM,YAAYC,KAAK,EAAE,CAAC;QAC5BF,EAAE,CAACC,MAAM,EAAEE,SAAS;IACtB,CAAC,MAAM,CAAC;QACNH,EAAE,CAACG,SAAS,EAAEF,MAAM;IACtB,CAAC;AACH,CAAC;AAEDZ,MAAM,CAACI,YAAY,GAAGA,YAAY;AAClCJ,MAAM,CAACU,cAAc,GAAGA,cAAc;AAEtCV,MAAM,CAACD,IAAI,GAAGA,IAAI;eAEHC,MAAM"}
{"version":3,"sources":["../../../src/swc/__tests__/options.test.ts"],"sourcesContent":["import type { Options } from \"@swc/core\";\nimport deepmerge from 'deepmerge'\n\nimport parserArgs, { CliOptions, initProgram } from \"../options\";\n\ninterface ParserArgsReturn {\n  swcOptions: Options;\n  cliOptions: CliOptions;\n}\n\nconst createDefaultResult = (): ParserArgsReturn => ({\n  \"cliOptions\": {\n    \"copyFiles\": false,\n    \"deleteDirOnStart\": false,\n    \"extensions\": [\".js\", \".jsx\", \".es6\", \".es\", \".mjs\", \".ts\", \".tsx\"],\n    // @ts-expect-error\n    \"filename\": undefined,\n    \"filenames\": [\"src\"],\n    \"includeDotfiles\": false,\n    // @ts-expect-error\n    \"outDir\": undefined,\n    // @ts-expect-error\n    \"outFile\": undefined,\n    \"quiet\": false,\n    \"sourceMapTarget\": undefined,\n    \"sync\": false,\n    \"watch\": false\n  },\n  \"swcOptions\": {\n    \"configFile\": undefined,\n    \"jsc\": { \"parser\": undefined, \"transform\": {} },\n    \"sourceFileName\": undefined,\n    \"sourceMaps\": undefined,\n    \"sourceRoot\": undefined,\n    \"swcrc\": true\n  }\n})\n\ndescribe('parserArgs', () => {\n  let defaultResult: ParserArgsReturn\n\n  beforeEach(() => {\n    defaultResult = createDefaultResult()\n    initProgram()\n  })\n\n  it(\"minimal args returns default result\", async () => {\n    const args = [\n      'node',\n      '/path/to/node_modules/swc-cli/bin/swc.js',\n      'src'\n    ]\n    const result = await parserArgs(args);\n    expect(result).toEqual(defaultResult);\n  });\n\n  describe('errors', () => {\n    let mockExit: jest.SpyInstance\n    let mockConsoleError: jest.SpyInstance\n\n    beforeAll(() => {\n      //@ts-expect-error\n      mockExit = jest.spyOn(process, 'exit').mockImplementation(() => { });\n      mockConsoleError = jest.spyOn(console, 'error').mockImplementation(() => { });\n    })\n\n    beforeEach(() => {\n      mockExit.mockClear()\n      mockConsoleError.mockClear()\n    })\n\n    afterAll(() => {\n      mockExit.mockRestore()\n      mockConsoleError.mockRestore()\n    })\n\n    it('exits without filenames', async () => {\n      const args = [\n        'node',\n        '/path/to/node_modules/swc-cli/bin/swc.js',\n      ]\n      await parserArgs(args);\n      expect(mockExit).toHaveBeenCalledWith(2);\n      expect(mockConsoleError).toHaveBeenCalledTimes(2);\n    })\n\n    it('--watch exits without --out-dir', async () => {\n      const args = [\n        'node',\n        '/path/to/node_modules/swc-cli/bin/swc.js',\n        'src',\n        '--watch',\n      ]\n      await parserArgs(args);\n      expect(mockExit).toHaveBeenCalledWith(2);\n      expect(mockConsoleError).toHaveBeenCalledTimes(2);\n    })\n\n    it('--watch exits without filenames', async () => {\n      const args = [\n        'node',\n        '/path/to/node_modules/swc-cli/bin/swc.js',\n        '--watch',\n        '--out-dir',\n        'esm'\n      ]\n      await parserArgs(args);\n      expect(mockExit).toHaveBeenCalledWith(2);\n      expect(mockConsoleError).toHaveBeenCalledTimes(3);\n    })\n\n    it('--out-dir exits with conflicting -out-file', async () => {\n      const args = [\n        'node',\n        '/path/to/node_modules/swc-cli/bin/swc.js',\n        'src',\n        '--out-file',\n        'esm/index.js',\n        '--out-dir',\n        'esm'\n      ]\n      await parserArgs(args);\n      expect(mockExit).toHaveBeenCalledWith(2);\n      expect(mockConsoleError).toHaveBeenCalledTimes(2);\n    })\n  })\n\n  describe('--source-maps', () => {\n    it(\"source maps is ambiguous\", async () => {\n      const args = [\n        'node',\n        '/path/to/node_modules/swc-cli/bin/swc.js',\n        'src',\n        '--source-maps'\n      ]\n      const result = await parserArgs(args);\n      const expectedOptions = deepmerge(defaultResult, { swcOptions: { sourceMaps: true } })\n      expect(result).toEqual(expectedOptions);\n    });\n\n    it(\"source maps true\", async () => {\n      const args = [\n        'node',\n        '/path/to/node_modules/swc-cli/bin/swc.js',\n        '--source-maps',\n        'true',\n        'src'\n      ]\n      const result = await parserArgs(args);\n      const expectedOptions = deepmerge(defaultResult, { swcOptions: { sourceMaps: true } })\n      expect(result).toEqual(expectedOptions);\n    });\n\n    it(\"source maps inline\", async () => {\n      const args = [\n        'node',\n        '/path/to/node_modules/swc-cli/bin/swc.js',\n        '-s',\n        'inline',\n        'src'\n      ]\n      const result = await parserArgs(args);\n      const expectedOptions = deepmerge(defaultResult, { swcOptions: { sourceMaps: 'inline' } })\n      expect(result).toEqual(expectedOptions);\n    });\n  });\n\n  describe('--config', () => {\n    it(\"throws with no config\", async () => {\n      const args = [\n        'node',\n        '/path/to/node_modules/swc-cli/bin/swc.js',\n        'src',\n        '-C',\n      ]\n      expect(() => parserArgs(args)).toThrow();\n    });\n\n    it(\"react development\", async () => {\n      const args = [\n        'node',\n        '/path/to/node_modules/swc-cli/bin/swc.js',\n        '--config',\n        'jsc.transform.react.development=true',\n        'src'\n      ]\n      const result = await parserArgs(args);\n      const expectedOptions = deepmerge(defaultResult.swcOptions, {\n        jsc: { transform: { react: { development: true } } }\n      })\n      expect(result.swcOptions).toEqual(expectedOptions);\n    });\n\n    it(\"react development and commonjs (two config options)\", async () => {\n      const args = [\n        'node',\n        '/path/to/node_modules/swc-cli/bin/swc.js',\n        '--config',\n        'jsc.transform.react.development=true',\n        '-C',\n        'module.type=commonjs',\n        'src'\n      ]\n      const result = await parserArgs(args);\n      const expectedOptions = deepmerge(defaultResult.swcOptions, {\n        jsc: { transform: { react: { development: true } } },\n        module: { type: 'commonjs' }\n      })\n      expect(result.swcOptions).toEqual(expectedOptions);\n    });\n\n    it(\"react development and commonjs (comma-separated)\", async () => {\n      const args = [\n        'node',\n        '/path/to/node_modules/swc-cli/bin/swc.js',\n        '--config',\n        'jsc.transform.react.development=true,module.type=commonjs',\n        'src'\n      ]\n      const result = await parserArgs(args);\n      const expectedOptions = deepmerge(defaultResult.swcOptions, {\n        jsc: { transform: { react: { development: true } } },\n        module: { type: 'commonjs' }\n      })\n      expect(result.swcOptions).toEqual(expectedOptions);\n    });\n\n    it(\"no equals sign\", async () => {\n      const args = [\n        'node',\n        '/path/to/node_modules/swc-cli/bin/swc.js',\n        '--config',\n        'no_equals',\n        'src'\n      ]\n      const result = await parserArgs(args);\n      const expectedOptions = deepmerge(defaultResult.swcOptions, {\n        no_equals: true\n      })\n      expect(result.swcOptions).toEqual(expectedOptions);\n    });\n  })\n})\n"],"names":["createDefaultResult","undefined","describe","defaultResult","beforeEach","it","args","result","expect","toEqual","mockExit","mockConsoleError","beforeAll","jest","spyOn","process","mockImplementation","console","mockClear","afterAll","mockRestore","toHaveBeenCalledWith","toHaveBeenCalledTimes","expectedOptions","swcOptions","sourceMaps","toThrow","jsc","transform","react","development","module","type","no_equals"],"mappings":"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"}
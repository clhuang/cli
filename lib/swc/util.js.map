{"version":3,"sources":["../../src/swc/util.ts"],"sourcesContent":["import * as swc from \"@swc/core\";\nimport slash from \"slash\";\nimport { mkdirSync, writeFileSync } from \"fs\";\nimport { dirname, relative } from \"path\";\n\n\nexport async function transform(\n  filename: string,\n  code: string,\n  opts: swc.Options,\n  sync: boolean,\n  outputPath: string | undefined\n): Promise<swc.Output> {\n  opts = {\n    filename,\n    ...opts,\n  };\n\n  if (outputPath) {\n    opts.outputPath = outputPath;\n  }\n\n  if (sync) {\n    return swc.transformSync(code, opts);\n  }\n\n  return swc.transform(code, opts);\n}\n\nexport async function compile(\n  filename: string,\n  opts: swc.Options,\n  sync: boolean,\n  outputPath: string | undefined\n): Promise<swc.Output | void> {\n  opts = {\n    ...opts\n  };\n  if (outputPath) {\n    opts.outputPath = outputPath;\n  }\n\n  try {\n    const result = sync\n      ? swc.transformFileSync(filename, opts)\n      : await swc.transformFile(filename, opts);\n\n    if (result.map) {\n      // TODO: fix this in core\n      // https://github.com/swc-project/swc/issues/1388\n      const sourceMap = JSON.parse(result.map);\n      if (opts.sourceFileName) {\n        sourceMap['sources'][0] = opts.sourceFileName;\n      }\n      if (opts.sourceRoot) {\n        sourceMap['sourceRoot'] = opts.sourceRoot;\n      }\n      result.map = JSON.stringify(sourceMap);\n    }\n    return result;\n  } catch (err) {\n    if (!err.message.includes(\"ignored by .swcrc\")) {\n      throw err;\n    }\n  }\n}\n\nexport function outputFile(\n  output: swc.Output,\n  filename: string,\n  sourceMaps: undefined | swc.Options['sourceMaps']\n) {\n  const destDir = dirname(filename);\n  mkdirSync(destDir, { recursive: true });\n\n  let code = output.code;\n  if (output.map && sourceMaps !== \"inline\") {\n    // we've requested for a sourcemap to be written to disk\n    const fileDirName = dirname(filename);\n    const mapLoc = filename + \".map\";\n    code += \"\\n//# sourceMappingURL=\" + slash(relative(fileDirName, mapLoc));\n    writeFileSync(mapLoc, output.map);\n  }\n\n  writeFileSync(filename, code);\n}\n\n\nexport function assertCompilationResult<T>(\n  result: Map<string, Error | T>,\n  quiet = false\n): asserts result is Map<string, T> {\n  let compiled = 0;\n  let copied = 0;\n  let failed = 0;\n  for (const value of result.values()) {\n    if (value instanceof Error) {\n      failed++;\n    } else if (value as unknown === 'copied') {\n      copied++;\n    } else if (value) {\n      compiled++;\n    }\n  }\n  if (!quiet && compiled + copied > 0) {\n    const copyResult = copied === 0 ? \" \" : ` (copied ${copied}) `;\n    console.info(\n      `Successfully compiled ${compiled} ${compiled !== 1 ? \"files\" : \"file\"}${copyResult}with swc.`\n    );\n  }\n\n  if (failed > 0) {\n    throw new Error(\n      `Failed to compile ${failed} ${failed !== 1 ? \"files\" : \"file\"} with swc.`\n    );\n  }\n}\n"],"names":["transform","compile","outputFile","assertCompilationResult","swc","filename","code","opts","sync","outputPath","transformSync","result","transformFileSync","transformFile","map","sourceMap","JSON","parse","sourceFileName","sourceRoot","stringify","err","message","includes","output","sourceMaps","destDir","recursive","fileDirName","mapLoc","quiet","compiled","copied","failed","value","values","Error","copyResult","console","info"],"mappings":"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"}
{"version":3,"sources":["../../src/swc/options.ts"],"sourcesContent":["import commander from \"commander\";\nimport { DEFAULT_EXTENSIONS, version as swcCoreVersion } from \"@swc/core\";\nimport type { Options } from \"@swc/core\";\n\nconst pkg = require(\"../../package.json\");\n\nlet program: commander.Command;\n\nexport const initProgram = () => {\n  program = new commander.Command();\n\n  /* istanbul ignore next */\n  if (process.env.NODE_ENV === \"test\") {\n    program.exitOverride();\n  }\n\n  program.option(\n    \"-f, --filename [filename]\",\n    \"filename to use when reading from stdin - this will be used in source-maps, errors etc\"\n  );\n\n  program.option(\"--config-file [path]\", \"Path to a .swcrc file to use\");\n\n  program.option(\n    \"--env-name [name]\",\n    \"The name of the 'env' to use when loading configs and plugins. \" +\n      \"Defaults to the value of SWC_ENV, or else NODE_ENV, or else 'development'.\"\n  );\n\n  program.option(\"--no-swcrc\", \"Whether or not to look up .swcrc files\");\n\n  program.option(\n    \"--delete-dir-on-start\",\n    \"Whether or not delete output directory on start\"\n  );\n\n  program.option(\n    \"--skip-initial-compilation\",\n    \"Whether or not to skip initial compilation with --watch\"\n  );\n\n  program.option(\n    \"--ignore [list]\",\n    \"list of glob paths to **not** compile\",\n    collect\n  );\n\n  program.option(\n    \"--only [list]\",\n    \"list of glob paths to **only** compile\",\n    collect\n  );\n\n  program.option(\"-w, --watch\", \"Recompile files on changes\");\n\n  program.option(\"-q, --quiet\", \"Suppress compilation output\");\n\n  program.option(\n    \"-s, --source-maps [true|false|inline|both]\",\n    \"generate source maps\",\n    unstringify\n  );\n\n  program.option(\n    \"--source-map-target [string]\",\n    \"set `file` on returned source map\"\n  );\n\n  program.option(\n    \"--source-file-name [string]\",\n    \"set `sources[0]` on returned source map\"\n  );\n\n  program.option(\n    \"--source-root [filename]\",\n    \"the root from which all sources are relative\"\n  );\n\n  program.option(\n    \"-o, --out-file [out]\",\n    \"Compile all input files into a single file\"\n  );\n\n  program.option(\n    \"-d, --out-dir [out]\",\n    \"Compile an input directory of modules into an output directory\"\n  );\n\n  program.option(\n    \"-D, --copy-files\",\n    \"When compiling a directory copy over non-compilable files\"\n  );\n  program.option(\n    \"--include-dotfiles\",\n    \"Include dotfiles when compiling and copying non-compilable files\"\n  );\n\n  program.option(\n    \"-C, --config <config>\",\n    \"Override a config from .swcrc file. e.g. -C module.type=amd -C module.moduleId=hello\",\n    collect\n  );\n\n  program.option(\n    \"--sync\",\n    \"Invoke swc synchronously. Useful for debugging.\",\n    collect\n  );\n\n  program.option(\n    \"--log-watch-compilation\",\n    \"Log a message when a watched file is successfully compiled\",\n    true\n  );\n\n  program.option(\"--extensions [list]\", \"Use specific extensions\", collect);\n\n  program.version(`\n@swc/cli: ${pkg.version}\n@swc/core: ${swcCoreVersion}\n`);\n\n  program.usage(\"[options] <files ...>\");\n};\n\nfunction unstringify(val: string): any {\n  try {\n    return JSON.parse(val);\n  } catch {\n    return val;\n  }\n}\n\nfunction collect(\n  value: string,\n  previousValue?: string[]\n): string[] | undefined {\n  // If the user passed the option with no value, like \"babel file.js --presets\", do nothing.\n  /* istanbul ignore next */\n  if (typeof value !== \"string\") return previousValue;\n\n  const values = value.split(\",\");\n\n  return previousValue ? previousValue.concat(values) : values;\n}\n\nexport interface CliOptions {\n  readonly outDir: string;\n  readonly outFile: string;\n  /**\n   * Invoke swc using transformSync. It's useful for debugging.\n   */\n  readonly sync: boolean;\n  readonly sourceMapTarget?: string;\n  readonly filename: string;\n  readonly filenames: string[];\n  readonly extensions: string[];\n  readonly watch: boolean;\n  readonly copyFiles: boolean;\n  readonly includeDotfiles: boolean;\n  readonly deleteDirOnStart: boolean;\n  readonly skipInitialCompilation: boolean;\n  readonly quiet: boolean;\n}\n\nexport default function parserArgs(args: string[]) {\n  program.parse(args);\n  const opts = program.opts();\n\n  const filenames = program.args;\n  const errors = [];\n\n  if (opts.outDir && !filenames.length) {\n    errors.push(\"--out-dir requires filenames\");\n  }\n\n  if (opts.outFile && opts.outDir) {\n    errors.push(\"--out-file and --out-dir cannot be used together\");\n  }\n\n  if (opts.watch) {\n    if (!opts.outFile && !opts.outDir) {\n      errors.push(\"--watch requires --out-file or --out-dir\");\n    }\n\n    if (!filenames.length) {\n      errors.push(\"--watch requires filenames\");\n    }\n  }\n\n  if (\n    !opts.outDir &&\n    filenames.length === 0 &&\n    typeof opts.filename !== \"string\" &&\n    opts.swcrc !== false\n  ) {\n    errors.push(\n      \"stdin compilation requires either -f/--filename [filename] or --no-swcrc\"\n    );\n  }\n\n  if (errors.length) {\n    console.error(\"swc:\");\n    for (const error of errors) {\n      console.error(\"  \" + error);\n    }\n    process.exit(2);\n  }\n\n  const swcOptions: Options = {\n    jsc: {\n      parser: undefined,\n      transform: {},\n    },\n    sourceFileName: opts.sourceFileName,\n    sourceRoot: opts.sourceRoot,\n    configFile: opts.configFile,\n    swcrc: opts.swcrc,\n  };\n\n  if (opts.sourceMaps !== undefined) {\n    swcOptions.sourceMaps = opts.sourceMaps;\n  }\n\n  if (opts.config) {\n    for (const cfg of opts.config as string[]) {\n      const i = cfg.indexOf(\"=\");\n      let key: string;\n      let value: any;\n      if (i === -1) {\n        key = cfg;\n        value = true;\n      } else {\n        key = cfg.substring(0, i);\n        value = unstringify(cfg.substring(i + 1));\n      }\n      // https://github.com/swc-project/cli/issues/45\n      let options = swcOptions as { [key: string]: any };\n      const keyParts = key.split(\".\");\n      const lastIndex = keyParts.length - 1;\n      for (const [index, keyPart] of keyParts.entries()) {\n        if (options[keyPart] === undefined && index !== lastIndex) {\n          options[keyPart] = {};\n        }\n        if (index === lastIndex) {\n          options[keyPart] = value;\n        } else {\n          options = options[keyPart];\n        }\n      }\n    }\n  }\n\n  const cliOptions: CliOptions = {\n    outDir: opts.outDir,\n    outFile: opts.outFile,\n    filename: opts.filename,\n    filenames,\n    sync: !!opts.sync,\n    sourceMapTarget: opts.sourceMapTarget,\n    extensions: opts.extensions || DEFAULT_EXTENSIONS,\n    watch: !!opts.watch,\n    copyFiles: !!opts.copyFiles,\n    includeDotfiles: !!opts.includeDotfiles,\n    deleteDirOnStart: Boolean(opts.deleteDirOnStart),\n    skipInitialCompilation: Boolean(opts.skipInitialCompilation),\n    quiet: !!opts.quiet,\n  };\n  return {\n    swcOptions,\n    cliOptions,\n  };\n}\n"],"names":["parserArgs","pkg","require","program","initProgram","Command","process","env","NODE_ENV","exitOverride","option","collect","unstringify","version","usage","val","JSON","parse","value","previousValue","values","split","concat","args","opts","filenames","errors","outDir","length","push","outFile","watch","filename","swcrc","console","error","exit","swcOptions","jsc","parser","undefined","transform","sourceFileName","sourceRoot","configFile","sourceMaps","config","cfg","i","indexOf","key","substring","options","keyParts","lastIndex","index","keyPart","entries","cliOptions","sync","sourceMapTarget","extensions","copyFiles","includeDotfiles","deleteDirOnStart","Boolean","skipInitialCompilation","quiet"],"mappings":"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"}